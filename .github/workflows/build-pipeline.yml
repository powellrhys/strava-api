name: Build Project
on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
  push:
    branches:
      - main
      - feature/*

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint-codebase:
    name: Lint Codebase
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Checkout repository Code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install Python
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev_requirements.txt

      # Lint python codebase with flake8
      - name: Lint with flake8
        run: |
          flake8 --count --show-source --statistics

      # Lint yaml pipelines with yamllint
      - name: Lint with yamllint
        run: |
          yamllint -c .yamllint.yml .

  build-container:
    name: Build Container
    needs: lint-codebase
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Checkout repository Code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Login into Github Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build Container
      - name: "Build image: ${{ github.repository }}"
        run: docker build -f Dockerfile -t $REGISTRY/$IMAGE_NAME .

      # Push Container to github container registry
      - name: Push ${{ github.repository }} to GitHub container registry
        run: |
          docker push $REGISTRY/$IMAGE_NAME:latest

      # Login to DockerHub
      - name: DockerHub Login
        env:
          DOCKER_USERNAME: ${{ github.actor }}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      # Push to DockerHub Container Registry
      - name: Push ${{ github.repository }} to DockerHub Container registry
        run: |
          docker tag $REGISTRY/$IMAGE_NAME:latest $IMAGE_NAME:latest
          docker push $IMAGE_NAME

  restart-application:
    name: Restart Application
    needs: build-container
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Checkout repository (optional if not needed)
      - name: Checkout repository
        uses: actions/checkout@v3

      # Login to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Stop the Web App
      - name: Stop Azure Web App
        run: |
          az webapp stop `
          --name ${{ secrets.WEBAPP_NAME }} `
          --resource-group ${{ secrets.WEBAPP_RESOURCE_GROUP }}

      # Wait for webapp to stop
      - name: Wait for webapp to stop
        run: |
          sleep 10

      # # Start the Web App
      # - name: Stop Azure Web App
      #   run: |
      #     az webapp start `
      #     --name ${{ secrets.WEBAPP_NAME }} `
      #     --resource-group ${{ secrets.WEBAPP_RESOURCE_GROUP }}
